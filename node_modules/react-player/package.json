{
  "_args": [
    [
      {
        "raw": "react-player@^0.12.0",
        "scope": null,
        "escapedName": "react-player",
        "name": "react-player",
        "rawSpec": "^0.12.0",
        "spec": ">=0.12.0 <0.13.0",
        "type": "range"
      },
      "C:\\HOME\\UI materials\\React JS project\\AmeriHealthInsurance"
    ]
  ],
  "_from": "react-player@>=0.12.0 <0.13.0",
  "_id": "react-player@0.12.1",
  "_inCache": true,
  "_location": "/react-player",
  "_nodeVersion": "5.5.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-player-0.12.1.tgz_1479545121309_0.9645302055869251"
  },
  "_npmUser": {
    "name": "cookpete",
    "email": "pete@cookpete.com"
  },
  "_npmVersion": "3.8.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-player@^0.12.0",
    "scope": null,
    "escapedName": "react-player",
    "name": "react-player",
    "rawSpec": "^0.12.0",
    "spec": ">=0.12.0 <0.13.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-player/-/react-player-0.12.1.tgz",
  "_shasum": "69d7d337622243966cf6716ac36d18b6d555991e",
  "_shrinkwrap": null,
  "_spec": "react-player@^0.12.0",
  "_where": "C:\\HOME\\UI materials\\React JS project\\AmeriHealthInsurance",
  "author": {
    "name": "Pete Cook",
    "email": "pete@cookpete.com",
    "url": "http://github.com/cookpete"
  },
  "bugs": {
    "url": "https://github.com/CookPete/react-player/issues"
  },
  "dependencies": {
    "fetch-jsonp": "^1.0.2",
    "load-script": "^1.0.0",
    "query-string": "^4.2.3"
  },
  "description": "A react component for playing a variety of URLs, including file paths, YouTube, SoundCloud, Streamable, Vidme and Vimeo",
  "devDependencies": {
    "auto-changelog": "^0.3.1",
    "babel-cli": "^6.16.0",
    "babel-core": "^6.16.0",
    "babel-eslint": "^7.0.0",
    "babel-loader": "^6.2.5",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-es3-member-expression-literals": "^6.8.0",
    "babel-plugin-transform-es3-property-literals": "^6.8.0",
    "babel-preset-es2015": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-react-hmre": "^1.1.1",
    "babel-preset-stage-0": "^6.16.0",
    "chai": "^3.5.0",
    "css-loader": "^0.26.0",
    "es6-promise": "^4.0.3",
    "exports-loader": "^0.6.3",
    "express": "^4.14.0",
    "extract-text-webpack-plugin": "^1.0.1",
    "json-loader": "^0.5.4",
    "karma": "^1.3.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-cli": "^1.0.1",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.2.0",
    "karma-mocha-reporter": "^2.2.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^1.8.0",
    "mocha": "^3.1.0",
    "node-sass": "^3.10.1",
    "normalize.css": "^5.0.0",
    "react": "^15.3.2",
    "react-dom": "^15.3.2",
    "rimraf": "^2.5.4",
    "sass-loader": "^4.0.2",
    "screenfull": "^3.0.2",
    "snazzy": "^5.0.0",
    "standard": "^8.3.0",
    "style-loader": "^0.13.1",
    "webpack": "^1.13.2",
    "webpack-dev-middleware": "^1.8.3",
    "webpack-hot-middleware": "^2.12.2",
    "whatwg-fetch": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "69d7d337622243966cf6716ac36d18b6d555991e",
    "tarball": "https://registry.npmjs.org/react-player/-/react-player-0.12.1.tgz"
  },
  "gitHead": "e4c456958576b093ec663efc52035730d2e830d4",
  "homepage": "https://github.com/CookPete/react-player",
  "keywords": [
    "react",
    "media",
    "player",
    "video",
    "audio",
    "youtube",
    "soundcloud",
    "streamable",
    "vimeo",
    "react-component"
  ],
  "license": "CC0-1.0",
  "main": "lib/ReactPlayer.js",
  "maintainers": [
    {
      "name": "cookpete",
      "email": "pete@cookpete.com"
    }
  ],
  "name": "react-player",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "*"
  },
  "readme": "ReactPlayer\n===========\n\n[![Latest npm version](https://img.shields.io/npm/v/react-player.svg)](https://www.npmjs.com/package/react-player)\n[![Build Status](https://img.shields.io/travis/CookPete/react-player/master.svg)](https://travis-ci.org/CookPete/react-player)\n[![Dependency Status](https://img.shields.io/david/CookPete/react-player.svg)](https://david-dm.org/CookPete/react-player)\n[![devDependency Status](https://img.shields.io/david/dev/CookPete/react-player.svg)](https://david-dm.org/CookPete/react-player?type=dev)\n\nA react component for playing media from YouTube, SoundCloud, Streamable, Vidme or Vimeo, as well as supported media files. Used by [rplayr](http://rplayr.com), an app to generate playlists from Reddit URLs.\n\nThe component parses a URL and loads in the appropriate markup and external SDKs to play media from [various sources](#supported-media). [Props](#props) can be passed in to control playback and react to events such as buffering or media ending.\n\n### Polyfills\n\nIf you are using `npm` and need to support [browsers without `Promise`](http://caniuse.com/#feat=promises) you will need a [`Promise` polyfill](https://github.com/stefanpenner/es6-promise). To support `Streamable` or `Vidme` videos you will also need a [`fetch` polyfill](https://github.com/github/fetch) for [browsers without `fetch`](http://caniuse.com/#feat=fetch)\n\n### Usage\n\n```bash\nnpm install react-player --save\n```\n\n```js\nimport React, { Component } from 'react'\nimport ReactPlayer from 'react-player'\n\nclass App extends Component {\n  render () {\n    return <ReactPlayer url='https://www.youtube.com/watch?v=ysz5S6PUM-U' playing />\n  }\n}\n```\n\nSee [the demo source](https://github.com/CookPete/react-player/blob/master/src/demo/App.js) for a full example.\n\nFor platforms like [Meteor](https://www.meteor.com) without direct use of `npm` modules, a minified version of `ReactPlayer` is located in `dist` after installing. To generate this file yourself, checkout the repo and run `npm run build:browser`\n\n#### Bower\n\n```bash\nbower install react-player --save\n```\n\n```html\n<script src='bower_components/react/react.js'></script>\n<script src='bower_components/react/react-dom.js'></script>\n<script src='bower_components/react-player/dist/ReactPlayer.js'></script>\n<script>\n  ReactDOM.render(\n    <ReactPlayer url='https://www.youtube.com/watch?v=d46Azg3Pm4c' playing />,\n    document.getElementById('container')\n  )\n</script>\n```\n\n### Demo\n\nSee a [live demo](http://cookpete.com/react-player), or run:\n\n```bash\ngit clone https://github.com/CookPete/react-player.git\ncd react-player\nnpm install\nnpm start\nopen http://localhost:3000\n```\n\n### Mobile considerations\n\nDue to various restrictions, `ReactPlayer` is not guaranteed to function properly on mobile devices. The [YouTube player documentation](https://developers.google.com/youtube/iframe_api_reference), for example, explains that [certain mobile browsers require user interaction](https://developers.google.com/youtube/iframe_api_reference#Mobile_considerations) before playing:\n\n> The HTML5 `<video>` element, in certain mobile browsers (such as Chrome and Safari), only allows playback to take place if it's initiated by a user interaction (such as tapping on the player).\n\n### Props\n\nProp | Description | Default\n---- | ----------- | -------\n`url` | The url of a video or song to play\n`playing` | Set to `true` or `false` to pause or play the media | `false`\n`loop` | Set to `true` or `false` to loop the media | `false`\n`controls` | Set to `true` or `false` to display native player controls<br />*Note: Vimeo player controls are not configurable and will always display* | `false`\n`volume` | Sets the volume of the appropriate player | `0.8`\n`width` | Sets the width of the player | `640`\n`height` | Sets the height of the player | `360`\n`hidden` | Set to `true` to hide the player | `false`\n`className` | Pass in a `className` to set on the root element\n`style` | Add [inline styles](https://facebook.github.io/react/tips/inline-styles.html) to the root element\n`progressFrequency` | The time between `onProgress` callbacks, in milliseconds | `1000`\n\n#### Callback props\n\nCallback props take a function that gets fired on various player events:\n\nProp | Description\n---- | -----------\n`onReady` | Called when media is loaded and ready to play. If `playing` is set to `true`, media will play immediately\n`onStart` | Called when media starts playing\n`onPlay` | Called when media starts or resumes playing after pausing or buffering\n`onProgress` | Callback containing `played` and `loaded` progress as a fraction<br />eg `{ played: 0.12, loaded: 0.34 }`\n`onDuration` | Callback containing duration of the media, in seconds\n`onPause` | Called when media is paused\n`onBuffer` | Called when media starts buffering\n`onEnded` | Called when media finishes playing\n`onError` | Called when an error occurs whilst attempting to play media\n\n#### Config props\n\nThese props allow you to override the parameters for the various players:\n\nProp | Description\n---- | -----------\n`soundcloudConfig` | Configuration object for the SoundCloud player.<br />Set `clientId` to your own SoundCloud app [client ID](https://soundcloud.com/you/apps).<br />Set `showArtwork` to `false` to not load any artwork to display.\n`vimeoConfig` | Configuration object for the Vimeo player.<br />Set `iframeParams` to override the [default params](https://developer.vimeo.com/player/embedding#universal-parameters).<br />Set `preload` for [preloading](#preloading).\n`youtubeConfig` | Configuration object for the YouTube player.<br />Set `playerVars` to override the [default player vars](https://developers.google.com/youtube/player_parameters?playerVersion=HTML5).<br />Set `preload` for [preloading](#preloading).\n`fileConfig` | Configuration object for the file player.<br />Set `attributes` to apply [element attributes](https://developer.mozilla.org/en/docs/Web/HTML/Element/video#Attributes).\n\n##### Preloading\n\nBoth `youtubeConfig` and `vimeoConfig` props can take a `preload` value. Setting this to `true` will play a short, silent video in the background when `ReactPlayer` first mounts. This fixes a [bug](https://github.com/CookPete/react-player/issues/7) where videos would not play when loaded in a background browser tab.\n\n### Methods\n\nTo seek to a certain part of the media, there is a `seekTo(fraction)` instance method that will seek to the appropriate place in the media. See `App.js` for an example of this using `refs`.\n\n### Supported media\n\n* YouTube videos use the [YouTube iFrame Player API](https://developers.google.com/youtube/iframe_api_reference)\n* Soundcloud tracks are [resolved](https://developers.soundcloud.com/docs/api/reference#resolve) and played in an [`<audio>`](https://developer.mozilla.org/en/docs/Web/HTML/Element/audio) element using the track’s `stream_url`\n* Streamable videos are [resolved](https://streamable.com/documentation#retrieve-video) and played in a [`<video>`](https://developer.mozilla.org/en/docs/Web/HTML/Element/video) element using the track’s `mp4` path\n* Vidme videos are [resolved](https://docs.vid.me/#api-Video-DetailByURL) and played in a [`<video>`](https://developer.mozilla.org/en/docs/Web/HTML/Element/video) element using the track’s `complete_url` path\n* Vimeo videos use the [Vimeo Player API](https://developer.vimeo.com/player/js-api)\n* [Supported file types](https://github.com/CookPete/react-player/blob/master/src/players/FilePlayer.js#L5-L6) are playing using [`<video>`](https://developer.mozilla.org/en/docs/Web/HTML/Element/video) or [`<audio>`](https://developer.mozilla.org/en/docs/Web/HTML/Element/audio) elements\n\n### Contributing\n\nSee the [contribution guidelines](https://github.com/CookPete/react-player/blob/master/CONTRIBUTING.md) before creating a pull request.\n\n### Thanks\n\n* Anyone who has [contributed](https://github.com/CookPete/react-player/graphs/contributors)\n* [gaearon](https://github.com/gaearon) for his [react-transform-boilerplate](https://github.com/gaearon/react-transform-boilerplate), which this repo is roughly based on.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/CookPete/react-player.git"
  },
  "scripts": {
    "build:browser": "NODE_ENV=production webpack --config webpack.config.browser.js",
    "build:compile": "NODE_ENV=production babel src -d lib --ignore src/demo",
    "build:demo": "npm run clean && npm run build:webpack && cp index.html demo",
    "build:webpack": "NODE_ENV=production webpack --config webpack.config.prod.js",
    "clean": "rimraf lib demo",
    "lint": "standard --verbose | snazzy",
    "postpublish": "npm run clean",
    "prepublish": "npm run build:compile; npm run build:browser",
    "preversion": "npm run lint",
    "start": "node server.js",
    "test": "karma start test/karma.config.js",
    "update-changelog": "auto-changelog --package --template compact",
    "version": "npm run update-changelog && npm run build:browser && git add CHANGELOG.md dist"
  },
  "standard": {
    "parser": "babel-eslint",
    "ignore": [
      "/dist/*"
    ]
  },
  "version": "0.12.1"
}
