{
  "_args": [
    [
      {
        "raw": "react-google-charts@^1.2.1",
        "scope": null,
        "escapedName": "react-google-charts",
        "name": "react-google-charts",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "C:\\HOME\\UI materials\\React JS project\\AmeriHealthInsurance"
    ]
  ],
  "_from": "react-google-charts@>=1.2.1 <2.0.0",
  "_id": "react-google-charts@1.5.5",
  "_inCache": true,
  "_location": "/react-google-charts",
  "_nodeVersion": "7.7.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-google-charts-1.5.5.tgz_1494684996496_0.9547042776830494"
  },
  "_npmUser": {
    "name": "rakannimer",
    "email": "rakannimer@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-google-charts@^1.2.1",
    "scope": null,
    "escapedName": "react-google-charts",
    "name": "react-google-charts",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-google-charts/-/react-google-charts-1.5.5.tgz",
  "_shasum": "ffeaeca752a820a05029bd6a23516be2432d7df5",
  "_shrinkwrap": null,
  "_spec": "react-google-charts@^1.2.1",
  "_where": "C:\\HOME\\UI materials\\React JS project\\AmeriHealthInsurance",
  "author": {
    "name": "Rakan Nimer"
  },
  "bugs": {
    "url": "https://github.com/rakannimer/react-google-charts/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "loadjs": "^3.3.1",
    "prop-types": "^15.5.8",
    "react": "^15.3.2",
    "react-dom": "^15.3.2"
  },
  "description": "react-google-charts React component",
  "devDependencies": {
    "babel-eslint": "^6.1.2",
    "babel-jest": "^18.0.0",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "dotenv": "^2.0.0",
    "eslint": "^3.6.1",
    "eslint-config-airbnb": "^12.0.0",
    "eslint-plugin-babel": "^3.3.0",
    "eslint-plugin-import": "^1.16.0",
    "eslint-plugin-jsx-a11y": "^2.2.2",
    "eslint-plugin-react": "^6.3.0",
    "github-changes": "^1.0.4",
    "gulp-react-docs": "^0.1.2",
    "jest": "^19.0.2",
    "jsdoc": "^3.4.0",
    "jsdom": "^9.5.0",
    "nwb": "^0.15.6",
    "object-assign": "^4.1.0",
    "pre-commit": "^1.2.2",
    "react-router": "^2.4.1",
    "react-test-renderer": "^15.3.2",
    "yargs": "^5.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ffeaeca752a820a05029bd6a23516be2432d7df5",
    "tarball": "https://registry.npmjs.org/react-google-charts/-/react-google-charts-1.5.5.tgz"
  },
  "gh-pages-deploy": {
    "staticpath": "demo/dist/"
  },
  "gitHead": "60319f57eafaf9cc6b5ed7365789f0888e147141",
  "homepage": "https://rakannimer.github.io/react-google-charts/",
  "jest": {
    "moduleFileExtensions": [
      "jsx",
      "js",
      "json"
    ],
    "moduleNameMapper": {
      "^.+\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/config/jest/FileStub.js",
      "^.+\\.css$": "<rootDir>/config/jest/CSSStub.js"
    },
    "testPathIgnorePatterns": [
      "<rootDir>/(build|docs|node_modules)/"
    ],
    "testEnvironment": "node",
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(js|jsx)$"
  },
  "keywords": [
    "react",
    "google",
    "charts"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "rakannimer",
      "email": "rakannimer@gmail.com"
    }
  ],
  "name": "react-google-charts",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">= 0.13.x",
    "react-dom": ">= 0.13.x"
  },
  "readme": "# react-google-charts\n\n[![CircleCI](https://circleci.com/gh/RakanNimer/react-google-charts.svg?style=shield)](https://circleci.com/gh/RakanNimer/react-google-charts)\n\n[![NPM](https://nodei.co/npm/react-google-charts.png?downloads=true&downloadRank=true)](https://npmjs.org/package/react-google-charts)\n\n\nA React JS wrapper to make it easy and fun to work with Google Charts.\n\n\n## Installation\n\n```\nyarn add react-google-charts\n```\n\nor \n\n```\nnpm i -s react-google-charts\n```\nor from unpkg.com using html script tag : \n\n```html\n <script src=\"https://unpkg.com/react-google-charts@1.4.0/umd/react-google-charts.min.js\" />\n```\n\nand you can then use it using ReactGoogleCharts.default.Chart \n\n[JSFiddle example](https://jsfiddle.net/f8zpr8uc/)\n\n\n## Quick Start\n\n```javascript\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Chart } from 'react-google-charts';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className={'my-pretty-chart-container'}>\n        <Chart\n          chartType=\"ScatterChart\"\n          data={[['Age', 'Weight'], [8, 12], [4, 5.5]]}\n          options={{}}\n          graph_id=\"ScatterChart\"\n          width=\"100%\"\n          height=\"400px\"\n          legend_toggle\n        />\n      </div>\n    );\n  }\n}\nrender(<App />, document.querySelector('#app'));\n```\n\n## Quick Walkthrough\n\n### Initialize from data array :\n\n```javascript\nimport { Chart } from 'react-google-charts';\nimport React from 'react';\n\nclass ExampleChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        title: 'Age vs. Weight comparison',\n        hAxis: { title: 'Age', minValue: 0, maxValue: 15 },\n        vAxis: { title: 'Weight', minValue: 0, maxValue: 15 },\n        legend: 'none',\n      },\n      data: [\n        ['Age', 'Weight'],\n        [8, 12],\n        [4, 5.5],\n        [11, 14],\n        [4, 5],\n        [3, 3.5],\n        [6.5, 7],\n      ],\n    };\n  }\n  render() {\n    return (\n      <Chart\n        chartType=\"ScatterChart\"\n        data={this.state.data}\n        options={this.state.options}\n        graph_id=\"ScatterChart\"\n        width=\"100%\"\n        height=\"400px\"\n        legend_toggle\n      />\n    );\n  }\n}\nexport default ExampleChart;\n```\n\n### Initialize using rows and columns :\n\n```javascript\nimport { Chart } from 'react-google-charts';\nimport React from 'react';\n\nclass ExampleChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        title: 'Age vs. Weight comparison',\n        hAxis: { title: 'Age', minValue: 0, maxValue: 15 },\n        vAxis: { title: 'Weight', minValue: 0, maxValue: 15 },\n        legend: 'none',\n      },\n      rows: [\n        [8, 12],\n        [4, 5.5],\n        [11, 14],\n        [4, 5],\n        [3, 3.5],\n        [6.5, 7],\n      ],\n      columns: [\n        {\n          type: 'number',\n          label: 'Age',\n        },\n        {\n          type: 'number',\n          label: 'Weight',\n        },\n      ],\n    };\n  }\n  render() {\n    return (\n      <Chart\n        chartType=\"ScatterChart\"\n        rows={this.state.rows}\n        columns={this.state.columns}\n        options={this.state.options}\n        graph_id=\"ScatterChart\"\n        width={'100%'}\n        height={'400px'}\n        legend_toggle\n      />\n    );\n  }\n}\nexport default ExampleChart;\n\n```\n\n### Listen to chart events\n\nSet the chart-specific events you want to listen to and the corresponding callback.\nThe callback has the component as an argument.\n\n```javascript\nimport React from 'react';\nimport { Chart } from 'react-google-charts';\n\nclass ExampleChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartEvents = [\n      {\n        eventName: 'select',\n        callback(Chart) {\n            // Returns Chart so you can access props and  the ChartWrapper object from chart.wrapper\n          console.log('Selected ', Chart.chart.getSelection());\n        },\n      },\n    ];\n    this.state = {\n      options: {\n        title: 'Age vs. Weight comparison',\n        hAxis: { title: 'Age', minValue: 0, maxValue: 15 },\n        vAxis: { title: 'Weight', minValue: 0, maxValue: 15 },\n        legend: 'none',\n      },\n      rows: [\n        [8, 12],\n        [4, 5.5],\n        [11, 14],\n        [4, 5],\n        [3, 3.5],\n        [6.5, 7],\n      ],\n      columns: [\n        {\n          type: 'number',\n          label: 'Age',\n        },\n        {\n          type: 'number',\n          label: 'Weight',\n        },\n      ],\n    };\n  }\n  render() {\n    return (\n      <Chart\n        chartType=\"ScatterChart\"\n        rows={this.state.rows}\n        columns={this.state.columns}\n        options={this.state.options}\n        graph_id=\"ScatterChart\"\n        width=\"100%\"\n        height=\"400px\"\n        chartEvents={this.chartEvents}\n      />\n    );\n  }\n}\nexport default ExampleChart;\n```\n\n##Isomorphic support\n\nSupports isomorphic configurations out of the box thanks to [@voogryk](https://github.com/voogryk)\n\n## Examples\n\n### Run the example app\n\n```bash\ngit clone https://www.github.com/rakannimer/react-google-charts\ncd react-google-charts/demo\nnpm link ../\nnpm install\nnpm start\n```\n\n## FAQ\n\n### Timeline/table chart is not rendering.\n\nChart loader is a singleton that only loads chartPackages once, and by default it loads the ```corechart``` packages.\nIf you need to use packages like ```timeline```  or ```table```, add chartPackages prop with value ['corechart', 'timeline'] to your charts.\n\n\n## [Changelog](./CHANGELOG.md)\n\n## Contributing\n\nContributions are very welcome. Check out [CONTRIBUTING.md](CONTRIBUTING.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/RakanNimer/react-google-charts.git"
  },
  "scripts": {
    "build": "mv .babelrc .babelrc.backup && nwb build && mv .babelrc.backup .babelrc",
    "clean": "nwb clean",
    "deploy": "gh-pages-deploy",
    "gen:changelog": "github-changes -o RakanNimer -r react-google-charts",
    "lint": "eslint src/*",
    "start": "nwb serve",
    "test": "npm run lint && npm run test-node-env && npm run test-jsdom-env",
    "test-jsdom-env": "jest --env jsdom __tests__/Chart.test.js --verbose",
    "test-node-env": "jest --env node __tests__/Chart.test.js  --verbose"
  },
  "type": "react-component",
  "version": "1.5.5"
}
